{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router\";\nexport default function CrearFormulario() {\n  _s();\n  const [form, setForm] = useState({\n    nombre: \"\",\n    rut: \"\",\n    edad: \"\",\n    prevision: \"\",\n    acompanante: \"\",\n    motivo_de_consulta: \"\",\n    horario_de_atencion: \"\",\n    fecha: \"\",\n    examenes_solicitados: \"\",\n    diagnostico: \"\",\n    tratamientos_e_indicaciones: \"\",\n    numero_de_folio: \"\",\n    clasificacion: \"\"\n  });\n  const navigate = useNavigate();\n  function updateForm(value) {\n    return setForm(prev => {\n      return {\n        ...prev,\n        ...value\n      };\n    });\n  }\n  async function onSubmit(e) {\n    e.preventDefault();\n\n    // Conectarse a la base de datos\n    const db = await connectToDatabase();\n\n    // Realizar la consulta a la base de datos utilizando el RUT del formulario\n    const result = await db.collection(\"pacientes\").findOne({\n      rut: form.rut\n    });\n    if (result) {\n      // Si se encuentra el paciente, actualiza el estado del formulario con los datos obtenidos\n      updateForm(result);\n    } else {\n      window.alert(\"No se encontró ningún paciente con ese RUT\");\n    }\n    navigate(\"/\");\n  }\n}\n_s(CrearFormulario, \"07ujoAyc+BIm0DNoQn5KcC5V238=\", false, function () {\n  return [useNavigate];\n});\n_c = CrearFormulario;\nvar _c;\n$RefreshReg$(_c, \"CrearFormulario\");","map":{"version":3,"names":["React","useState","useNavigate","CrearFormulario","_s","form","setForm","nombre","rut","edad","prevision","acompanante","motivo_de_consulta","horario_de_atencion","fecha","examenes_solicitados","diagnostico","tratamientos_e_indicaciones","numero_de_folio","clasificacion","navigate","updateForm","value","prev","onSubmit","e","preventDefault","db","connectToDatabase","result","collection","findOne","window","alert","_c","$RefreshReg$"],"sources":["C:/Users/Alex/Documents/VSCode/anal/g06/inf236-2023-1-par201-grupo-06/client/src/components/visualizar.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router\";\r\n\r\nexport default function CrearFormulario() {\r\n    const [form, setForm] = useState({\r\n      nombre: \"\",\r\n      rut: \"\",\r\n      edad: \"\",\r\n      prevision: \"\",\r\n      acompanante: \"\",\r\n      motivo_de_consulta: \"\",\r\n      horario_de_atencion: \"\",\r\n      fecha: \"\",\r\n      examenes_solicitados: \"\",\r\n      diagnostico: \"\",\r\n      tratamientos_e_indicaciones: \"\",\r\n      numero_de_folio: \"\",\r\n      clasificacion: \"\"\r\n    });\r\n  \r\n    const navigate = useNavigate();\r\n  \r\n    function updateForm(value) {\r\n      return setForm((prev) => {\r\n        return { ...prev, ...value };\r\n      });\r\n    }\r\n  \r\n    async function onSubmit(e) {\r\n      e.preventDefault();\r\n  \r\n      // Conectarse a la base de datos\r\n      const db = await connectToDatabase();\r\n  \r\n      // Realizar la consulta a la base de datos utilizando el RUT del formulario\r\n      const result = await db.collection(\"pacientes\").findOne({ rut: form.rut });\r\n  \r\n      if (result) {\r\n        // Si se encuentra el paciente, actualiza el estado del formulario con los datos obtenidos\r\n        updateForm(result);\r\n      } else {\r\n        window.alert(\"No se encontró ningún paciente con ese RUT\");\r\n      }\r\n  \r\n      navigate(\"/\");\r\n    }\r\n\r\n}"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,cAAc;AAE1C,eAAe,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EACtC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGL,QAAQ,CAAC;IAC/BM,MAAM,EAAE,EAAE;IACVC,GAAG,EAAE,EAAE;IACPC,IAAI,EAAE,EAAE;IACRC,SAAS,EAAE,EAAE;IACbC,WAAW,EAAE,EAAE;IACfC,kBAAkB,EAAE,EAAE;IACtBC,mBAAmB,EAAE,EAAE;IACvBC,KAAK,EAAE,EAAE;IACTC,oBAAoB,EAAE,EAAE;IACxBC,WAAW,EAAE,EAAE;IACfC,2BAA2B,EAAE,EAAE;IAC/BC,eAAe,EAAE,EAAE;IACnBC,aAAa,EAAE;EACjB,CAAC,CAAC;EAEF,MAAMC,QAAQ,GAAGlB,WAAW,CAAC,CAAC;EAE9B,SAASmB,UAAUA,CAACC,KAAK,EAAE;IACzB,OAAOhB,OAAO,CAAEiB,IAAI,IAAK;MACvB,OAAO;QAAE,GAAGA,IAAI;QAAE,GAAGD;MAAM,CAAC;IAC9B,CAAC,CAAC;EACJ;EAEA,eAAeE,QAAQA,CAACC,CAAC,EAAE;IACzBA,CAAC,CAACC,cAAc,CAAC,CAAC;;IAElB;IACA,MAAMC,EAAE,GAAG,MAAMC,iBAAiB,CAAC,CAAC;;IAEpC;IACA,MAAMC,MAAM,GAAG,MAAMF,EAAE,CAACG,UAAU,CAAC,WAAW,CAAC,CAACC,OAAO,CAAC;MAAEvB,GAAG,EAAEH,IAAI,CAACG;IAAI,CAAC,CAAC;IAE1E,IAAIqB,MAAM,EAAE;MACV;MACAR,UAAU,CAACQ,MAAM,CAAC;IACpB,CAAC,MAAM;MACLG,MAAM,CAACC,KAAK,CAAC,4CAA4C,CAAC;IAC5D;IAEAb,QAAQ,CAAC,GAAG,CAAC;EACf;AAEJ;AAAChB,EAAA,CA5CuBD,eAAe;EAAA,QAiBlBD,WAAW;AAAA;AAAAgC,EAAA,GAjBR/B,eAAe;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}